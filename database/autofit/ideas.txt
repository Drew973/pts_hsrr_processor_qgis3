
assume run_geom unique.
map run_geom to network geom.


represent readings as trajectory?
simpler to get run chainage.
need to store rl as well as run chainages.

could think of run_ch as 3rd dimension?


nodes as pairs of run_pt,topo_pt

unique on (run_pt,topo_pt)
nodes can share run_pt.
and topo_pt.


assume all readings within distance of network are fitted? doesn't work for networks with gaps in slips

for given run_pt can have many topo_pt. 1 per topo section.


edges as pairs of linestrings run_geom,topo_geom.
some topology rules. can only go from section to connected section or dummy.


nodes for each nearby section.
join nodes where network geom intersects both nodes






better way to find edges?

	sometimes closest run chainage to end of last correct section > closest run chainage of start of next correct section.
	results in correct path not being found as requires dummys.
	
	link route_nodes to following points with section.

	link to previous route_node within small distance approx 5m.
		end up with overlaps...
		
		



	find points where section could change.
	near section end,
	left network completely
	change of direction
	,
	

	using topology would help with this.
	and with splitting roundabouts.
	
	
	
	
	
	could probably just use shortest path.
	st_dwithin possibly better than using round ended buffer. same results and simpler.


	

	


	
	
	want to fit sequence of linestrings to minimize distance to
	sequence of geometries(point or 2 point linestring) with possible gaps. can easily split where gap.
	ie multilinestringM
	
		
	want to:
		penalise fitting to section miles away
			
		prevent same part of route being in multiple sections. ie no overlapping route chainage ranges.
		reading can be in multiple sections though
	
		penalise discontinuities where sections not connected.
	
		
		
	
	
		can assume change of section is near end of at least 1 network geometry.
	
		for roundabouts snap to other section end?
	
	
	
		reward per reading = x-cost function
		cost = cost_function -x
	
	
		need rules for what part of route can come after other part.
		
		
		chainage at finite intervals can acts as node.
		node per interval.
		
		each node connected to all nodes with higher chainage by dummy.
		or next node by dummy.
		
		
		
		each edge has to be from 1st reading within buffer to last reading within buffer
		
	
	
		can break readings into smaller pieces only fitted to single sec.
	
		limited accuracy. 1m more than precise enough.
		
		
		can easily get parts of readings not near network.	


		shortest_path?
			