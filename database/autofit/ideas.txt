
assume run_geom unique.
map run_geom to network geom.


represent readings as trajectory?
simpler to get run chainage.
need to store rl as well as run chainages.

could think of run_ch as 3rd dimension?


nodes as pairs of run_pt,topo_pt

unique on (run_pt,topo_pt)
nodes can share run_pt.
and topo_pt.


assume all readings within distance of network are fitted? doesn't work for networks with gaps in slips

for given run_pt can have many topo_pt. 1 per topo section.


edges as pairs of linestrings run_geom,topo_geom.
some topology rules. can only go from section to connected section or dummy.


nodes for each nearby section.
join nodes where network geom intersects both nodes



densify run_geom ie points every x m.
then 1-1 relationship





better way to find edges?

	sometimes closest run chainage to end of last correct section > closest run chainage of start of next correct section.
	results in correct path not being found as requires dummys.
	
	link route_nodes to following points with section.

		
		
	find points where section could change.
	near section end,
	left network completely
	change of direction
	,
	

	using topology would help with this.
	and with splitting roundabouts.
	
	
	finding connections to route nodes:
	if node is topology node then topo edge starting here. 
	
	else where topo_geom nearby.
	
	
	
	
	
	could probably just use shortest path.
	st_dwithin possibly better than using round ended buffer. same results and simpler.

	
	
	want to fit sequence of linestrings to minimize distance to
	sequence of geometries(point or 2 point linestring) with possible gaps. can easily split where gap.
	ie multilinestringM
	
		
	want to:
		penalise fitting to section miles away
			
		prevent same part of route being in multiple sections. ie no overlapping route chainage ranges.
		can break readings into smaller pieces only fitted to single sec?

		need rules for what part of route can come after other part.
		each part connected to previous or dummy.
		
		
		
		
	
		limited accuracy. 1m more than precise enough.
		
		can easily get parts of readings not near network.	